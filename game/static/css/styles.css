/* styles.css */
:root{
    --b-wid: 60.5vw;
    --t-siz: 5.5vw;
    --c_frame: #002e63;
    --c_tile: #1fbcff;
    --c_p_tile: #3072a4;
    --c_d_let: #00ffaa;
    --c_t_let: #ffab67;
    --c_d_wrd: #d75fff;
    --c_t_wrd: #ff5151;
    --c_back: #d3d9ff;
    --c_tex: #0b1d37;
}
html {
    margin: 0;
    padding: 0;
  }  
body {
    margin: 0;
    padding: 0;
    font-family: Arial, sans-serif;
    background-color: var(--c_frame);
    color: var(--c_tex);
}
h1{
    font-size: xx-large;
    color: var(--c_tex);
}
h2{
    font-size: 1.5vw;
    font-weight: normal;
    color: var(--c_tex);
}
sub{
    font-size: calc(var(--t-siz)/4);
}
table{
    background-color: var(--c_back);
    border-style: none;
    border-radius: 8px;
    border: none;
    border-collapse:collapse;
    width: 90vw;
}
th{
    border: none;
}
tr{
    border: none;
}
.leads:hover{
    background-color: var(--c_tile);
}
td{
    text-align: center;
    padding: .75vw 2vw;
    border: none;
}
th{
    padding: 1vw;
}
.gamefield{
    width: 55vw;
    display: flex;
    flex-direction: column;
    align-content: center;
    background-color: var(--c_back);

}
.m_til_tex{
    font-size: calc(38vw/13);
}
.m_sub_tex{
    font-size: calc(15vw/13);
}
.board {
    display: flex;
    flex-direction: column;
    flex-wrap: nowrap;
    background-color: var(--c_back);
    width: var(--b-wid);

}
.appfield{
    width: 40vw;
    display: flex;
    flex-direction: column;
    align-content: center;
    background-color: var(--c_frame);

}
.tile {
    width: var(--t-siz);
    height: var(--t-siz);
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: var(--c_back);
    border: 1px solid var(--c_tex);
    overflow: hidden;
}

.tile.filled {
    background-color: var(--c_tile); /* Change color for filled tiles */
}
.tile.placing {
    background-color: var(--c_p_tile); /* Change color for filled tiles */
}
.tile.start{
    background-color: #ff0040;
}
.tile.double-letter{
    background-color: var(--c_d_let);
}
.tile.triple-letter{
    background-color: var(--c_t_let);
}
.tile.double-word{
    background-color: var(--c_d_wrd);
}
.tile.triple-word{
    background-color: var(--c_t_wrd);
}
/* Default wrapper layout (horizontal) */
.wrapper {
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;

}
button{
    width: 8vw;
    height: 8vw;
    
}
.b_wide{
    width: 34vw;
    height: 8vw;
    text-align: center;
    align-content: center;
    background-color: var(--c_tile);
    border-radius: 8px;
    border-style: none;
    margin: 1vw;
    font-size: 3vw;
}
.b_wide:hover{
    background-color: var(--c_p_tile);
}
.b_main{
    width: 10vw;
    height: 6vw;
    text-align: center;
    align-content: center;
    background-color: var(--c_tile);
    border-radius: 8px;
    border-style: none;
    margin: 1vw;
    font-size: 1.5vw;
}
.b_main:hover{
    background-color: var(--c_p_tile);
}



.navrow{
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    flex-wrap: wrap;

}

.navrow.backed{
    background-color: var(--c_tile);
    border-style: none;
}

.row {
    display: flex; /* This helps maintain the grid structure */
    flex-direction: row;
}
.col {
    display: flex; /* This helps maintain the grid structure */
    flex-direction: column;
}
.ccol {
    display: flex; /* This helps maintain the grid structure */
    flex-direction: column;
    text-align: center;
    align-items: center;
    align-content: center;
    align-self: center;
    justify-self: center;
    justify-content: center;
    justify-items: center;
    text-justify: center;
}






/* Hide the standard radio input */
input[type="radio"] {
    display: none;
}

/* Container for each radio option */
.radio-option {
    display: inline-flex;
    align-items: center;
    cursor: pointer;
    margin: 10px;
    transition: transform 0.3s ease-in-out; /* Smooth transform animation */
}



/* Custom styling for the label, resembling a radio button */
.radio-option label {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 4vw;
    height: 4vw;
    background-color: var(--c_tile);
    color: var(--c_tex);
    transition: background-color 0.3s ease, transform 0.3s ease; /* Smooth background change */
}
.radio-option input[type="radio"]:disabled + label {
    background-color: var(--c_p_tile);
    opacity: .5;
}

/* Animation effect when hovering over a radio button */
.radio-option:hover label {
    transform: translateY(-6px); /* Shift up on hover */
    background-color: var(--c_back); /* Lighten color on hover */
}

/* Checked state styling for the label */
input[type="radio"]:checked + label {
    background-color: var(--c_p_tile);
    color: white;
    box-shadow: 0 4px 8px rgba(0, 123, 255, 0.3); /* Add shadow for effect */
    transform: scale(1.05); /* Slightly enlarge when selected */
}

.big{
    display: flex;
    flex-direction: row;
    font-size: 2.2vw;
}
.title{
    display: flex;
    flex-direction: row;
    font-size: 5vw;
    font-weight: bold;
}
b{
    font-size: inherit;
}
/* Hide the standard radio input */
input[type="checkbox"] {
    display: none;
}

/* Container for each radio option */
.checkbox-option {
    display: inline-flex;
    align-items: center;
    cursor: pointer;
    margin: 10px;
    transition: transform 0.3s ease-in-out; /* Smooth transform animation */
}



/* Custom styling for the label, resembling a radio button */
.checkbox-option label {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 4vw;
    height: 4vw;
    background-color: var(--c_tile);
    color: var(--c_tex);
    transition: background-color 0.3s ease, transform 0.3s ease; /* Smooth background change */
    font-size: 3vw;
}
.checkbox-option input[type="checkbox"]:disabled + label {
        background-color: var(--c_p_tile); /* Change color for filled tiles */
        opacity: .5;
}

/* Animation effect when hovering over a radio button */
.checkbox-option:hover label {
    transform: translateY(-6px); /* Shift up on hover */
    background-color: var(--c_back); /* Lighten color on hover */
}

/* Checked state styling for the label */
input[type="checkbox"]:checked + label {
    background-color: var(--c_p_tile);
    color: white;
    box-shadow: 0 4px 8px rgba(0, 123, 255, 0.3); /* Add shadow for effect */
    transform: scale(1.05); /* Slightly enlarge when selected */
}


a{
    text-decoration: none;
    color: inherit;
    font-size: 3vw;
}


.cooldown-bar {
    width: 100%;
    height: 10px;
    background-color: red;
    animation: cooldown linear var(--cooldown-time) forwards;
}

@keyframes cooldown {
    from { width: 100%; }
    to { width: 0; }
}
.screen{
    display: flex;
    flex-direction: column;
    align-items: center;
    align-content: center;
    text-align: center;
    justify-items: center;
    justify-content: center;
    text-justify: center;
    width: 100vw;

}

/* Adjust wrapper layout for small screens (vertical) */
@media (max-width: 780px) {
    :root{
        --b-wid: 100vw;
        --t-siz: calc(100vw/11);
    }
    .wrapper {
        flex-direction: column;
        flex-wrap: wrap;
    }
    .gamefield{
        width: 100vw;
    }
    .appfield{
        width: 100vw;
    }
    button{
        width: 20vw;
        height: 20vw;
    }
    .b_main{
        width: 25vw;
        height: 10vw;
        font-size: 3vw;
    }
    .b_wide{
        width: 79vw;
        font-size: 4vw;
    }
    .big{
        font-size: 3.5vw;
    }
    sub{
        font-size: calc(var(--t-siz)/3);
    }
    .radio-option label {
        width: 10vw;
        height: 10vw;
    }
    .checkbox-option label {
        width: 10vw;
        height: 10vw;
    }
    .m_til_tex{
        font-size: calc(84vw/13);
    }
    .m_sub_tex{
        font-size: calc(50vw/13);
    }
}